[
  {
    "title": "FindIT",
    "description": "Reverse search engine powered by an NN model, openclip, and Qdrant. Features a FastAPI backend and a React frontend.",
    "descriptionMD": "**FindIT: Advanced Reverse Image Search**\n\nDiscover the story behind any image with FindIT, a sophisticated reverse search engine.\nUtilizing a powerful **Neural Network (NN) model**, **OpenCLIP** for robust image embeddings, and **Qdrant** for efficient vector similarity search, FindIT delivers accurate and relevant results.\n\n**Key Technologies:**\n*   **Frontend:** Built with **React** for a dynamic and responsive user experience.\n*   **Backend:** Powered by **FastAPI**, ensuring high performance and scalability.\n*   **Core:** Leverages **OpenCLIP** for image understanding and **Qdrant** for managing and searching image embeddings.\n\nSimply upload an image, and let FindIT unveil its origins and related content.",
    "url": "https://findit.moe/",
    "apiUrl": "https://api.findit.moe/",
    "image": "https://img.arz.ai/0RgBiDTt",
    "tags": [
      "REACT",
      "FASTAPI",
      "NN",
      "OPENCLIP",
      "QDRANT"
    ],
    "status": "production"
  },
  {
    "title": "Novus Talk",
    "description": "Node graph agent creation tool inspired by ComfyUI. Uses LLMs with JSON graph definitions for agents/assistants, aiming for OpenAI schema compatible output. FastAPI backend with magic-llm. Work in progress.",
    "descriptionMD": "**Novus Talk: Intuitive Node-Based Agent Creation**\n\nInspired by the flexibility of ComfyUI, Novus Talk is a cutting-edge tool for designing and deploying **AI agents and assistants** using a visual node graph interface.\n\n**Core Features:**\n*   **Visual Programming:** Define complex agent behaviors by connecting nodes in an intuitive graph.\n*   **LLM Integration:** Seamlessly integrates with Large Language Models (LLMs) through **JSON graph definitions**.\n*   **Standardized Output:** Aims for compatibility with the **OpenAI schema** for consistent agent interactions.\n*   **Backend:** Robust **FastAPI** backend utilizing the **magic-llm** library for versatile LLM provider connections.\n\nNovus Talk is currently under active development, paving the way for innovative AI agent creation.",
    "url": "https://talk.novus.chat/",
    "apiUrl": "https://magic.arz.ai/",
    "image": "https://img.arz.ai/0GSBN8FV",
    "tags": [
      "FASTAPI",
      "LLM",
      "NODE GRAPH",
      "AGENTS",
      "JSON",
      "OPENAI",
      "MAGIC-LLM"
    ],
    "status": "production"
  },
  {
    "title": "JustAnotherFileStorage",
    "description": "Temporal file sharing system creating unique, encrypted file links. Decryption key is part of the URL; URLs are not stored, making recovery impossible. FastAPI backend, React frontend.",
    "descriptionMD": "**JustAnotherFileStorage (JAFS): Secure & Ephemeral File Sharing**\n\nShare files with an emphasis on privacy and security using JAFS. This system generates unique, encrypted links for your files, offering a temporal sharing solution.\n\n**Security by Design:**\n*   **Client-Side Encryption:** Files are encrypted in your browser before upload.\n*   **Key in URL:** The decryption key is embedded directly within the shared link's fragment identifier (hash).\n*   **Zero Knowledge (Server-Side):** The server never sees the decryption key, and the links themselves are not stored, making file recovery impossible if the link is lost. This ensures maximum privacy.\n\n**Technology Stack:**\n*   **Frontend:** Interactive and user-friendly interface built with **React**.\n*   **Backend:** High-performance and secure API developed with **FastAPI**.\n\nJAFS is ideal for sharing sensitive information that requires a self-destructing mechanism or when you want to ensure that only the recipient with the exact link can access the content.",
    "url": "https://shr.wtf/",
    "apiUrl": "https://shr.arz.ai/",
    "image": "https://img.arz.ai/gHIAqEJR",
    "tags": [
      "FASTAPI",
      "REACT",
      "FILE SHARING",
      "ENCRYPTION"
    ],
    "status": "production"
  },
  {
    "title": "spyder.findit",
    "description": "Reverse image search tool that displays results in a graph, using vector embeddings to calculate edges. Consumes the api.findit.moe API.",
    "descriptionMD": "**spyder.findit: Visualizing Image Similarity**\n\nExplore image connections like never before with `spyder.findit`. This innovative tool takes reverse image search a step further by displaying results as an interactive 3D graph.\n\n**Key Features:**\n*   **Graph-Based Results:** Instead of a simple list, `spyder.findit` visualizes image relationships, with **edges calculated based on the similarity of their vector embeddings**.\n*   **Powered by FindIT API:** Leverages the robust search capabilities of the `api.findit.moe` backend.\n*   **Immersive Exploration:** Navigate through a 3D force-directed graph to uncover visual connections and discover related imagery.\n\n**Technologies:**\n*   **Frontend:** Built with **React**.\n*   **3D Visualization:** Utilizes **Three.js** and **react-force-graph-3d** to render interactive and dynamic graphs.\n\n`spyder.findit` offers a unique and engaging way to perform reverse image searches and understand the intricate relationships between visual content.",
    "url": "https://spyder.findit.moe/",
    "image": "https://img.arz.ai/z9WApj2V",
    "apiUrl": "https://api.findit.moe/docs#/General%20anime%20image%20search",
    "repoUrl": "https://github.com/Andres77872/spyder.findit.moe",
    "tags": [
      "REACT",
      "THREE.JS",
      "REACT-FORCE-GRAPH-3D",
      "VECTOR EMBEDDINGS",
      "GRAPH VISUALIZATION"
    ],
    "status": "production"
  },
  {
    "title": "Colpali-Arxiv Chat",
    "description": "Proof-of-concept showcasing Colpali's capabilities for embedding, indexing, and RAG from Arxiv papers. Reformulates queries for targeted searches via Colpali index (llm.arz.ai) and generates summaries. Built with Streamlit, uses magic-llm. Single-turn chat POC, conversational features planned.",
    "descriptionMD": "**Colpali-Arxiv Chat: RAG for Scientific Research**\n\nThis **Proof-of-Concept (POC)** demonstrates the power of Colpali in revolutionizing how we interact with scientific literature from Arxiv.\n\n**Core Functionality:**\n*   **Retrieval-Augmented Generation (RAG):** Leverages Colpali for advanced embedding, indexing, and retrieval of information from Arxiv research papers.\n*   **Intelligent Query Reformulation:** When you enter a topic, the system uses Colpali to break it down into 1-5 targeted search queries for more precise results from the Colpali index (hosted at `llm.arz.ai`).\n*   **Concise Summaries:** Generates a summary report based on the retrieved information, providing quick insights into complex topics.\n*   **LLM Integration:** Uses the **magic-llm** wrapper for flexible language model interactions.\n\n**Development & Future:**\n*   **Platform:** Built with **Streamlit** for rapid prototyping and interactive web application development.\n*   **Current Stage:** A POC focusing on **single-turn chat interactions**.\n*   **Roadmap:** Enhancements for conversational abilities are planned for the future.\n*   **Independent Index:** The Colpali index is maintained separately, ensuring up-to-date and comprehensive data.\n\nColpali-Arxiv Chat aims to make navigating and understanding scientific research more efficient and accessible.",
    "url": "https://magic-reports.streamlit.app/",
    "image": "https://img.arz.ai/7NWBNqhx",
    "repoUrl": "https://github.com/Andres77872/magic-reports",
    "apiUrl": "https://llm.arz.ai/docs#/data%20sources/colpali_rag_colpali_arxiv_post",
    "tags": [
      "RAG",
      "STREAMLIT",
      "MAGIC-LLM",
      "COLPALI",
      "LLM"
    ],
    "status": "production"
  },
  {
    "title": "ColWrite",
    "description": "AI-powered writing assistant leveraging ColPali embeddings for advanced RAG capabilities. Built with React+Vite frontend and seamless integration with Qdrant for vector storage, delivering context-aware writing suggestions.",
    "descriptionMD": "**ColWrite: Context-Enhanced AI Writing Assistant**\n\nElevate your writing experience with ColWrite, a sophisticated AI assistant that understands context like never before. Harnessing the power of ColPali embeddings and retrieval-augmented generation, ColWrite delivers personalized writing assistance with remarkable precision.\n\n**Core Features:**\n*   **Advanced RAG System:** Utilizes **ColPali embeddings** for superior understanding of context and semantic relationships in your documents.\n*   **Intelligent Suggestions:** Provides contextually relevant writing recommendations, completions, and improvements based on your unique writing style and content.\n*   **Vector-Based Knowledge:** Leverages **Qdrant** for efficient vector storage and similarity search, ensuring fast and accurate retrieval of relevant information.\n*   **LLM Integration:** Powered by state-of-the-art language models through the **magic-assistant** framework for natural and helpful interactions.\n\n**Technology Stack:**\n*   **Frontend:** Modern and responsive interface built with **React + Vite** for optimal performance and development experience.\n*   **Embedding System:** Utilizes **ColPali** for primary embeddings, complemented by basic embedding techniques for enhanced retrieval.\n*   **Vector Database:** **Qdrant** for high-performance similarity search capabilities.\n*   **AI Framework:** Implements the **magic-assistant** library for seamless LLM integration and RAG workflows.\n\nColWrite represents the future of writing tools, where artificial intelligence enhances human creativity rather than replacing it, providing the perfect balance of assistance while keeping you in control of your unique voice.",
    "url": "https://magic-arxiv.novus.chat/",
    "image": "https://img.arz.ai/kIoBNtA5",
    "apiUrl": "https://magic.arz.ai/docs",
    "repoUrl": "https://github.com/Andres77872/magic-arxiv-writer",
    "tags": [
      "REACT",
      "VITE",
      "RAG",
      "COLPALI",
      "QDRANT",
      "LLM",
      "EMBEDDINGS",
      "MAGIC-ASSISTANT"
    ],
    "status": "production"
  },
  {
    "title": "Magic Worlds",
    "description": "Role-Play with AI designed to create characters, worlds, and adventures using artificial intelligence. Build and explore immersive stories with AI-generated content and interactive narratives.",
    "descriptionMD": "**Magic Worlds: AI-Powered Role-Playing Experience**\n\nDive into limitless storytelling possibilities with Magic Worlds, an innovative platform that leverages AI to create rich, immersive role-playing experiences.\n\n**Core Features:**\n*   **Character Creation:** Design unique characters with AI assistance, developing detailed backstories and personalities.\n*   **World Building:** Craft intricate worlds, settings, and environments that respond to your creative input.\n*   **Adventure Generation:** Create engaging narratives and interactive adventures that adapt to player choices.\n*   **Collaborative Storytelling:** Work alongside AI to develop plots, dialogue, and scenarios that bring your stories to life.\n\n**Technology Stack:**\n*   **Frontend:** Built with **React + Vite** for a responsive and immersive user experience.\n*   **AI Integration:** Powered by advanced language models through the **magic-assistant** framework.\n*   **Backend:** Utilizes the robust API from **magic.arz.ai** for intelligent content generation.\n\nMagic Worlds represents the intersection of traditional role-playing games and cutting-edge AI technology, offering an ever-expanding canvas for your imagination.",
    "url": "https://magic-worlds.novus.chat/",
    "apiUrl": "https://magic.arz.ai/docs#/Chat/completion_chat_openai_v1_completion_post",
    "image": "https://img.arz.ai/lO8Bbe-p",
    "repoUrl": "https://github.com/Andres77872/magic-worlds",
    "tags": [
      "REACT",
      "VITE",
      "MAGIC-ASSISTANT"
    ],
    "status": "production"
  },
  {
    "title": "Magic Slider",
    "description": "AI-powered slide creator that generates RevealJS presentations through LLM prompts. Integrates with talk.novus.chat backend API for intelligent content generation. Built with React + Vite, featuring RAG and agentic capabilities through magic-agents. Proof-of-concept for automated presentation creation.",
    "descriptionMD": "**Magic Slider: AI-Powered Presentation Creator**\n\nTransform your ideas into compelling presentations effortlessly with Magic Slider, an innovative **Proof-of-Concept (POC)** that leverages AI to generate professional slides from simple prompts.\n\n**Core Features:**\n*   **LLM-Driven Content Generation:** Simply describe your presentation topic, and let AI create structured, engaging slides for you.\n*   **RevealJS Integration:** Generates modern, interactive presentations using the powerful RevealJS framework.\n*   **Intelligent Backend:** Powered by the **talk.novus.chat API** for sophisticated content processing and generation.\n*   **Advanced AI Capabilities:** Incorporates **RAG (Retrieval-Augmented Generation)** and **agentic workflows** through the **magic-agents** framework.\n\n**Technology Stack:**\n*   **Frontend:** Built with **React + Vite** for fast development and optimal performance.\n*   **AI Framework:** Utilizes **magic-agents** for sophisticated AI-driven content creation.\n*   **Presentation Engine:** **RevealJS** for creating beautiful, interactive slide presentations.\n\n**Current Status:**\n*   **Proof-of-Concept** demonstrating the potential of AI-assisted presentation creation.\n\nMagic Slider represents the future of presentation design, where creativity meets artificial intelligence to streamline content creation.",
    "url": "https://magic-slider.novus.chat/",
    "image": "https://img.arz.ai/vGqCivS9",
    "apiUrl": "https://magic.arz.ai/docs#/Chat/completion_chat_openai_v1_completion_post",
    "repoUrl": "https://github.com/Andres77872/magic-slider",
    "tags": [
      "REACT",
      "VITE",
      "REVEALJS",
      "LLM",
      "RAG",
      "MAGIC-AGENTS"
    ],
    "status": "production"
  },
  {
    "title": "Magic Auth",
    "description": "Enterprise-grade 3-tier authentication system with Root/Admin/Consumer user types and complete RBAC capabilities. Multi-project support with hierarchical access control and advanced security features.",
    "descriptionMD": "**Magic Auth: Enterprise 3-Tier Authentication System**\n\nA comprehensive authentication platform designed for enterprise-grade access control with sophisticated user management and multi-project capabilities.\n\n**3-Tier User Architecture:**\n*   **ROOT USERS:** Unrestricted global access and system administration\n*   **ADMIN USERS:** Multi-project administration with complete project isolation\n*   **CONSUMER USERS:** RBAC-based access through user groups and permissions\n\n**Core Features:**\n*   **Advanced Authentication:** JWT-based sessions with HTTP-only cookie support and Bearer token fallback\n*   **Complete RBAC Management:** Granular permissions, role assignments, and real-time validation\n*   **Multi-Project Support:** Project isolation with hierarchical access control\n*   **Enterprise Security:** UUID-based identification, audit trails, and multi-layer security\n*   **Production Ready:** Scalable design with Redis caching and performance optimization\n\n**Technology Stack:**\n*   **Backend:** High-performance API built with **FastAPI** and **MySQL** database\n*   **Frontend:** Modern interface developed with **React + Vite**\n*   **Security:** JWT tokens, secure cookies, and comprehensive access control\n\nMagic Auth provides the foundation for complex organizational structures requiring sophisticated access management and enterprise-level security.",
    "url": "https://auth-ui.arz.ai/",
    "apiUrl": "https://auth-v2.arz.ai/",
    "image": "https://img.arz.ai/0whA6FF1",
    "repoUrl": "https://github.com/Andres77872/magic-auth-dashboard",
    "tags": [
      "FASTAPI",
      "MYSQL",
      "REACT",
      "VITE",
      "AUTHENTICATION",
      "RBAC",
      "JWT"
    ],
    "status": "production"
  },
  {
    "title": "magic-llm",
    "description": "LLM wrapper unifying providers like Anthropic, Cohere, AWS Bedrock, OpenAI, and any OpenAI compatible provider into a single OpenAI schema-based output format.",
    "descriptionMD": "**magic-llm: Unified LLM Integration Framework**\n\n`magic-llm` is a powerful Python library designed to simplify interactions with a multitude of Large Language Model (LLM) providers. It acts as a versatile wrapper, abstracting the complexities of different APIs.\n\n**Key Goals & Features:**\n*   **Provider Agnostic:** Supports major LLM providers including **Anthropic, Cohere, AWS Bedrock, OpenAI**, and any **OpenAI-compatible** service.\n*   **Standardized Output:** Unifies the output from various providers into a **single, consistent schema based on OpenAI's format**. This dramatically reduces the effort required to switch between or use multiple LLMs.\n*   **Simplified Development:** Allows developers to write code once and interact with different LLMs without significant modifications.\n\n**Core Dependencies:**\n*   **`boto3`**: For AWS Bedrock integration.\n*   **`httpx` / `aiohttp`**: For efficient asynchronous and synchronous HTTP requests to LLM APIs.\n\n`magic-llm` streamlines the development of LLM-powered applications by providing a consistent and easy-to-use interface across various providers.",
    "repoUrl": "https://github.com/Andres77872/magic-llm",
    "image": "https://img.arz.ai/5n3AU6bp",
    "tags": [
      "LLM",
      "WRAPPER",
      "OPENAI",
      "ANTHROPIC",
      "COHERE",
      "AWS BEDROCK",
      "BOTO3",
      "HTTPX",
      "AIOHTTP"
    ],
    "status": "repo"
  },
  {
    "title": "magic-agents",
    "description": "Graph framework for Novus Talk, inspired by ComfyUI. Uses magic-llm for LLM connections. Graph built with NetworkX, Jinja2 for node logic. Under development.",
    "descriptionMD": "**magic-agents: A ComfyUI-Inspired Graph Framework for AI Agents**\n\n`magic-agents` is the foundational graph framework powering **Novus Talk**, offering a flexible and intuitive way to construct sophisticated AI agents. Drawing inspiration from the node-based paradigm of ComfyUI, it allows for modular and visual agent design.\n\n**Core Components & Philosophy:**\n*   **Node-Based Architecture:** Agents are built by connecting functional nodes in a graph, where each node represents a specific task or logic unit.\n*   **LLM Connectivity:** Seamlessly integrates with Large Language Models through the **`magic-llm`** wrapper, enabling versatile LLM provider support.\n*   **Graph Management:** Utilizes **NetworkX** for robust graph creation, manipulation, and analysis.\n*   **Dynamic Node Logic:** Employs **Jinja2 templating** to define and execute logic within individual nodes, allowing for dynamic and configurable agent behaviors.\n\n**Current Status:**\n*   Actively **under development**, with a focus on building a comprehensive and user-friendly framework for creating next-generation AI agents.\n\n`magic-agents` aims to empower developers to build complex and adaptable AI systems with ease and precision.",
    "repoUrl": "https://github.com/Andres77872/magic-agents",
    "image": "https://img.arz.ai/pfgAs1_B",
    "tags": [
      "GRAPH FRAMEWORK",
      "LLM",
      "COMFYUI",
      "MAGIC-LLM",
      "NETWORKX",
      "JINJA2",
      "AGENTS"
    ],
    "status": "repo"
  },
  {
    "title": "Portfolio",
    "description": "Interactive personal portfolio showcasing projects and skills. Features an AI chatbot for portfolio exploration and a terminal-based canvas RPG game powered by LLM technology.",
    "descriptionMD": "**Portfolio: Interactive Developer Showcase**\n\nA modern and engaging portfolio that demonstrates technical skills and creative projects through interactive elements and AI integration.\n\n**Key Features:**\n*   **AI Chatbot Assistant:** Engage with an intelligent chatbot that provides information about projects, skills, and experience in an interactive format.\n*   **Terminal RPG Game:** Experience a unique mini-game with a terminal interface rendered on canvas, using LLM technology to simulate an immersive role-playing experience.\n*   **Project Showcase:** Comprehensive display of development projects with detailed information and visual elements.\n\n**Technology Stack:**\n*   **Frontend:** Built with **React + Vite** for optimal performance and development experience.\n*   **AI Integration:** Incorporates LLM technology for interactive elements and game simulation.\n*   **Canvas Rendering:** Utilizes HTML5 Canvas for creative visual elements and the terminal-based game interface.\n\nThis portfolio represents both a showcase of technical skills and a demonstration of creative application development.",
    "url": "https://arizmendi.io/",
    "image": "https://img.arz.ai/_lOApj6h",
    "repoUrl": "https://github.com/Andres77872/portfolio4",
    "tags": [
      "REACT",
      "VITE",
      "LLM",
      "CANVAS",
      "CHATBOT",
      "RPG"
    ],
    "status": "production"
  },
  {
    "title": "SmolVLM-500M-Anime-Caption",
    "description": "Specialized vision-language model for anime image captioning, fine-tuned from SmolVLM-500M-Base on 400,000 synthetic image/caption pairs generated with Llama 4 Maverick. Produces natural English descriptions for anime and illustration artworks.",
    "descriptionMD": "**SmolVLM-500M-Anime-Caption: Specialized Anime Image Captioning Model**\n\nA vision-language model specifically designed for describing anime-style images with natural English captions. This model represents a significant advancement in anime content understanding and description generation.\n\n**Core Features:**\n*   **Anime-Focused Captioning:** Generates detailed, accurate descriptions for anime, manga panels, and illustrations.\n*   **Fine-Tuned Architecture:** Built on **HuggingFaceTB/SmolVLM-500M-Base** with **SigLIP** vision encoder (google/siglip-base-patch16-512).\n*   **Extensive Training Data:** Trained on 400,000 synthetic image/caption pairs (200k SFW / 200k NSFW) generated with **Llama 4 Maverick**.\n*   **Content Indexing:** Ideal for tagging and organizing anime-focused archives, databases, and creative tools.\n\n**Technical Details:**\n*   **Model Size:** 500M parameters for efficient inference while maintaining high-quality outputs.\n*   **Language:** English image captioning with natural language descriptions.\n*   **License:** Apache 2.0 (inherited from base and training components).\n\nThis model bridges the gap between computer vision and natural language processing specifically for anime content, enabling more sophisticated anime image understanding and description.",
    "url": "https://huggingface.co/spaces/Andres77872/anime-caption-v0.2",
    "image": "https://img.arz.ai/l6oA8nJp",
    "apiUrl": "https://api.findit.moe/docs#/Utilities/image_caption_util_image_caption_post",
    "repoUrl": "https://huggingface.co/Andres77872/SmolVLM-500M-anime-caption-v0.2",
    "tags": [
      "HUGGINGFACE",
      "VLM",
      "IMAGE CAPTIONING",
      "SIGLIP",
      "FINE-TUNING",
      "LLM"
    ],
    "status": "production"
  }
]